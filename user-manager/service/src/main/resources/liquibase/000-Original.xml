<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">
	<!-- Add the hibernate_sequence on supported databases (for dbs where autoIncrement doesn't work) -->
	<changeSet author="peter@peterphi.com" id="pk_sequence_on_supported_dbs">
		<preConditions onFail="MARK_RAN">
			<or>
				<dbms type="postgresql"/>
				<dbms type="oracle"/>
				<dbms type="hsqldb"/>
				<dbms type="h2"/>
				<dbms type="db2"/>
			</or>
		</preConditions>
		<createSequence sequenceName="hibernate_sequence"/>
	</changeSet>

	<!-- Set up all the core tables and foreign key constraints -->
	<changeSet author="peter@peterphi.com" id="create_user_account">
		<createTable tableName="user_account">
			<column autoIncrement="true" name="id" type="INT">
				<constraints primaryKey="true" primaryKeyName="PK__user_account"/>
			</column>
			<column name="email" type="VARCHAR(200)">
				<constraints nullable="false"/>
			</column>
			<column name="password" type="VARCHAR(60)">
				<constraints nullable="false"/>
			</column>
			<column name="name" type="VARCHAR(100)">
				<constraints nullable="false"/>
			</column>
			<column name="local_session_id" type="VARCHAR(36)"/>
			<column name="date_format" type="VARCHAR(50)">
				<constraints nullable="false"/>
			</column>
			<column name="date_timezone" type="VARCHAR(50)">
				<constraints nullable="false"/>
			</column>

			<column name="created_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
			<column name="last_login_ts" type="BIGINT"/>
		</createTable>

		<addUniqueConstraint tableName="user_account" columnNames="email" constraintName="UX_user_account__email"
		                     deferrable="false" disabled="false" initiallyDeferred="false"/>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="add_role_definition_table">
		<!-- Defines a role -->
		<createTable tableName="role_definition">
			<column name="id" type="VARCHAR(255)">
				<constraints primaryKey="true" primaryKeyName="PK__role_definition"/>
			</column>
			<column name="caption" type="VARCHAR(1024)">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<!-- joins user and role -->
		<createTable tableName="user_has_role">
			<column name="user_id" type="INT">
				<constraints nullable="false"/>
			</column>
			<column name="role_id" type="VARCHAR(255)">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<addForeignKeyConstraint baseColumnNames="user_id" baseTableName="user_has_role"
		                         constraintName="FK__user_has_role__user_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="user_account"/>
		<addForeignKeyConstraint baseColumnNames="role_id" baseTableName="user_has_role"
		                         constraintName="FK__user_has_role__role_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="role_definition"/>

		<addPrimaryKey tableName="user_has_role" columnNames="user_id, role_id"
		               constraintName="PK__user_has_role"/>

		<insert tableName="role_definition">
			<column name="id" value="user-manager-admin"/>
			<column name="caption" value="User Administrator"/>
		</insert>
		<insert tableName="role_definition">
			<column name="id" value="admin"/>
			<column name="caption" value="Administrator"/>
		</insert>
		<insert tableName="role_definition">
			<column name="id" value="framework-admin"/>
			<column name="caption" value="Application Framework Administrator (for service /guice pages)"/>
		</insert>
		<insert tableName="role_definition">
			<column name="id" value="framework-info"/>
			<column name="caption" value="Application Framework User (for service /guice pages)"/>
		</insert>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="create_oauth_tables">
		<createTable tableName="oauth_service">
			<column name="id" type="VARCHAR(36)">
				<constraints primaryKey="true" primaryKeyName="PK__oauth_service"/>
			</column>
			<column name="owner_id" type="INT">
				<constraints nullable="false"/>
			</column>
			<column name="client_name" type="VARCHAR(1000)">
				<constraints nullable="false"/>
			</column>
			<column name="client_endpoints" type="VARCHAR(2000)">
				<constraints nullable="false"/>
			</column>
			<column name="client_secret" type="VARCHAR(36)">
				<constraints nullable="false"/>
			</column>
			<column name="is_enabled" type="BIT">
				<constraints nullable="false"/>
			</column>
			<column name="created_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
			<column name="updated_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<createTable tableName="oauth_session_context">
			<column name="id" type="INT" autoIncrement="true">
				<constraints primaryKey="true" primaryKeyName="PK__oauth_session_context"/>
			</column>
			<column name="user_id" type="INT">
				<constraints nullable="false"/>
			</column>
			<column name="service_id" type="VARCHAR(36)">
				<constraints nullable="false"/>
			</column>
			<column name="approved_scope" type="VARCHAR(1000)">
				<constraints nullable="false"/>
			</column>
			<column name="is_active" type="BIT">
				<constraints nullable="false"/>
			</column>
			<column name="created_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
			<column name="updated_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<createTable tableName="oauth_session">
			<column name="id" type="VARCHAR(36)">
				<constraints primaryKey="true" primaryKeyName="PK__oauth_session"/>
			</column>
			<column name="context_id" type="INT">
				<constraints nullable="false"/>
			</column>
			<column name="authorisation_code" type="VARCHAR(36)">
				<constraints nullable="true"/>
			</column>
			<column name="current_token" type="VARCHAR(36)">
				<constraints nullable="true"/>
			</column>
			<column name="initiator_detail" type="VARCHAR(8192)">
				<constraints nullable="true"/>
			</column>
			<column name="is_active" type="BIT">
				<constraints nullable="false"/>
			</column>
			<column name="expires_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>

			<column name="created_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
			<column name="updated_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
		</createTable>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="create_oauth_constraints__cascade">
		<preConditions onFail="MARK_RAN">
			<or>
				<dbms type="postgresql"/>
				<dbms type="oracle"/>
				<dbms type="hsqldb"/>
				<dbms type="h2"/>
				<dbms type="db2"/>
			</or>
		</preConditions>

		<!-- service.owner_id -->
		<addForeignKeyConstraint baseColumnNames="owner_id" baseTableName="oauth_service"
		                         constraintName="FK__oauth_service__user_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="user_account"/>
		<!-- session_context.service_id -->
		<addForeignKeyConstraint baseColumnNames="service_id" baseTableName="oauth_session_context"
		                         constraintName="FK__oauth_session_context__service_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="oauth_service"/>
		<!-- session_context.user_id -->
		<addForeignKeyConstraint baseColumnNames="user_id" baseTableName="oauth_session_context"
		                         constraintName="FK__oauth_session_context__user_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="user_account"/>
		<!-- session.context_id -->
		<addForeignKeyConstraint baseColumnNames="context_id" baseTableName="oauth_session"
		                         constraintName="FK__oauth_session__context_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="oauth_session_context"/>

	</changeSet>

	<changeSet author="peter@peterphi.com" id="create_oauth_constraints__sqlserver">
		<preConditions onFail="MARK_RAN">
			<or>
				<dbms type="mssql"/>
			</or>
		</preConditions>

		<!-- service.owner_id -->
		<addForeignKeyConstraint baseColumnNames="owner_id" baseTableName="oauth_service"
		                         constraintName="FK__oauth_service__user_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="user_account"/>
		<!-- session_context.service_id -->
		<addForeignKeyConstraint baseColumnNames="service_id" baseTableName="oauth_session_context"
		                         constraintName="FK__oauth_session_context__service_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="oauth_service"/>
		<!-- session_context.user_id -->
		<addForeignKeyConstraint baseColumnNames="user_id" baseTableName="oauth_session_context"
		                         constraintName="FK__oauth_session_context__user_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id"
		                         referencedTableName="user_account"/>
		<!-- session.context_id -->
		<addForeignKeyConstraint baseColumnNames="context_id" baseTableName="oauth_session"
		                         constraintName="FK__oauth_session__context_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="oauth_session_context"/>

	</changeSet>

	<changeSet author="peter@peterphi.com" id="create_user_is_local">
		<addColumn tableName="user_account">
			<column name="is_local" type="BOOLEAN" defaultValueBoolean="true">
				<constraints nullable="false"/>
			</column>
		</addColumn>
	</changeSet>


	<changeSet author="peter@peterphi.com" id="add_user_access_key">
		<addColumn tableName="user_account">
			<column name="access_key" type="VARCHAR(100)" />
			<column name="access_key_alt" type="VARCHAR(100)" />
		</addColumn>
	</changeSet>

	<changeSet id="change-oath-enabled-type-field" author="bryce.mcleod@codory.com">

		<dropColumn columnName="is_enabled"
		            tableName="oauth_service"/>
		<addColumn tableName="oauth_service">
			<column name="is_enabled" type="boolean" defaultValueBoolean="true">
				<constraints nullable="false"/>
			</column>
		</addColumn>

		<dropColumn columnName="is_active"
		            tableName="oauth_session_context"/>
		<addColumn tableName="oauth_session_context">
			<column name="is_active" type="boolean" defaultValueBoolean="false">
				<constraints nullable="false"/>
			</column>
		</addColumn>

		<dropColumn columnName="is_active"
		            tableName="oauth_session"/>
		<addColumn tableName="oauth_session">
			<column name="is_active" type="boolean" defaultValueBoolean="false">
				<constraints nullable="false"/>
			</column>
		</addColumn>

	</changeSet>

	<!-- N.B. not set up as a foreign key so that roles that do not yet exist can be referenced -->
	<changeSet author="peter@peterphi.com" id="add_service_required_role">
		<addColumn tableName="oauth_service">
			<column name="required_role_id" type="VARCHAR(255)"/>
		</addColumn>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="widen_service_required_role">
		<modifyDataType tableName="oauth_service" columnName="required_role_id" newDataType="VARCHAR(4096)" />
	</changeSet>

	<changeSet author="peter@peterphi.com" id="add_service_roles">
		<!-- joins service and role -->
		<createTable tableName="service_has_role">
			<column name="service_id" type="VARCHAR(36)">
				<constraints nullable="false"/>
			</column>
			<column name="role_id" type="VARCHAR(255)">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<addForeignKeyConstraint baseColumnNames="service_id" baseTableName="service_has_role"
		                         constraintName="FK__service_has_role__service_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="oauth_service"/>
		<addForeignKeyConstraint baseColumnNames="role_id" baseTableName="service_has_role"
		                         constraintName="FK__service_has_role__role_id" deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE" referencedColumnNames="id"
		                         referencedTableName="role_definition"/>

		<addPrimaryKey tableName="service_has_role" columnNames="service_id, role_id"
		               constraintName="PK__service_has_role"/>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="add_delegated_token_table">
		<createTable tableName="delegated_token">
			<column name="id" type="VARCHAR(36)">
				<constraints primaryKey="true" primaryKeyName="PK__delegated_token"/>
			</column>
			<column name="session_id" type="VARCHAR(36)">
				<constraints nullable="false"/>
			</column>
			<column name="expires_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>

			<column name="created_ts" type="BIGINT">
				<constraints nullable="false"/>
			</column>
		</createTable>

		<addForeignKeyConstraint baseTableName="delegated_token" baseColumnNames="session_id"
		                         constraintName="FK__delegated_token__session_id"
		                         deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE"
		                         referencedTableName="oauth_session" referencedColumnNames="id"/>
	</changeSet>

	<changeSet author="peter@peterphi.com" id="add_service_access_keys">
		<addColumn tableName="oauth_service">
			<column name="access_key" type="VARCHAR(100)" />
			<column name="access_key_alt" type="VARCHAR(100)" />
		</addColumn>
	</changeSet>

	<!-- User's names and Role Captions should use NVARCHAR to reflect that they need to be unicode-safe -->
	<changeSet author="peter@peterphi.com" id="nvarchar_for_user_text">
		<modifyDataType tableName="user_account" columnName="name" newDataType="NVARCHAR(100)" />
		<modifyDataType tableName="role_definition" columnName="caption" newDataType="NVARCHAR(1024)" />
	</changeSet>


	<changeSet author="peter@peterphi.com" id="add_pasword_reset_code">
		<createTable tableName="password_reset_code">
			<column name="id" type="VARCHAR(250)">
				<constraints primaryKey="true" primaryKeyName="PK__password_reset_code" />
			</column>

			<!-- A single user may not have multiple reset codes -->
			<column name="user_id" type="INT">
				<constraints unique="true" uniqueConstraintName="UX__password_reset_code__user" />
			</column>

			<!-- Timestamp at which point the code expires if not used -->
			<column name="expires_ts" type="BIGINT">
				<constraints nullable="false" />
			</column>
		</createTable>

		<addForeignKeyConstraint baseTableName="password_reset_code" baseColumnNames="user_id"
		                         constraintName="FK__password_reset_code__user_id"
		                         deferrable="false"
		                         initiallyDeferred="false" onDelete="CASCADE" onUpdate="CASCADE"
		                         referencedTableName="user_account" referencedColumnNames="id"/>
	</changeSet>

	<!-- Delete all existing Password Reset Codes, we have moved to storing hashed reset codes in PK -->
	<changeSet author="peter@peterphi.com" id="clear_password_reset_codes">
		<delete tableName="password_reset_code">
		</delete>
	</changeSet>
</databaseChangeLog>
